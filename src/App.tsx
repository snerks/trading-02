import { useState, useEffect } from 'react'
// import reactLogo from './assets/react.svg'
// import viteLogo from '/vite.svg'
import './App.css'


export interface JsonUser {
  userId: number;
  id: number;
  title: string;
  body: string;
}

function App() {// Generated by https://quicktype.io

  const [userId, setUserId] = useState('3');
  const [results, setResults] = useState([] as JsonUser[]);
  // const [count, setCount] = useState(0)

  useEffect(() => {
    // var url =  'https://jsonplaceholder.typicode.com/posts/1';

    // fetch('https://jsonplaceholder.typicode.com/posts?userId=1')
    //   .then((response) => response.json())
    //   .then((json) => {
    //     console.log(json);
    //     setResults(json);
    //   });
    // //.catch(err=>{console.log(err);});
    // setUserId('');

    const fetchData = async () => {
      const res = await fetch(
        `https://jsonplaceholder.typicode.com/posts?userId=${userId}`,
      );
      // .then((response) => {
      //   if (response.status >= 400 && response.status < 600) {
      //     throw new Error("Bad response from server");
      //   }
      //   return response;
      // })


      const response = await res.json();
      setResults(response);
    };
    fetchData();

    if (results.length > 0) {
      setUserId(results[0].userId.toString());
    }
  }, []);

  return (
    <>
      {/* <div>
        <a href="https://vitejs.dev" target="_blank">
          <img src={viteLogo} className="logo" alt="Vite logo" />
        </a>
        <a href="https://react.dev" target="_blank">
          <img src={reactLogo} className="logo react" alt="React logo" />
        </a>
      </div>
      <h1>Vite + React</h1>
      <div className="card">
        <button onClick={() => setCount((count) => count + 10)}>
          count is {count}
        </button>
        <p>
          Edit <code>src/App.tsx</code> and save to test HMR
        </p>
      </div>
      <p className="read-the-docs">
        Click on the Vite and React logos to learn more
      </p> */}
      <h1>User Id: {userId}</h1>
      <table>
        <thead>
          <tr>
            <th>UserId</th>
            <th>Id</th>
            <th>Title</th>
            <th>Body</th>
          </tr>
        </thead>
        <tbody>
          {results && results.map(result => (
            <tr key={result.id}>
              <td>{result.userId}</td>
              <td>{result.id}</td>
              <td>{result.title}</td>
              <td>{result.body}</td>
            </tr>
          ))}
        </tbody>
      </table>

      {/* <ul>
        {results && results.map(result => <li key={result.id}>{result.body}</li>)}
      </ul> */}

      {/* <pre>{JSON.stringify(results, null, 2)}</pre> */}
    </>
  )
}

export default App
